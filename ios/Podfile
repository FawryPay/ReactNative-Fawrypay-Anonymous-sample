ENV['RCT_NEW_ARCH_ENABLED'] = '1'

# Load the custom RCTAppDelegate fix
require_relative 'fix-rct-delegate.rb'

# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '16.6'
prepare_react_native_project!

target 'RnFawryPaySdkExample' do
  use_modular_headers!
  use_frameworks!# :linkage => :static

  # Add Folly explicitly
  pod 'RCT-Folly', :podspec => '../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec'

  config = use_native_modules!
  
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => true,
    :new_arch_enabled => true,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Then exclude specific pods
  pre_install do |installer|
    Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
    installer.pod_targets.each do |pod|
      if ['React-RCTAppDelegate'].include?(pod.name)
        def pod.build_type;
          Pod::BuildType.dynamic_framework
        end
      end
    end
  end
  
  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|

        # General settings
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        
        # Fix for Nitro and the new architecture
        if target.name.start_with?('React-')
          config.build_settings['SWIFT_VERSION'] = '5.0'
          config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'NO'
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
          config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_CFG_NO_COROUTINES=1'
        end

        # Specifically for React-RCTAppDelegate
        if ['React-RCTAppDelegate', 'React-RCTRuntime', 'React-Core'].include?(target.name)
          config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'NO'
          config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-error=implicit-function-declaration -Wno-error -Wno-nullability-completeness'
          config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = 'NO'
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.6'
        end

        if ['FawryPaySDK'].include?(target.name)
          config.build_settings['SKIP_INSTALL'] = 'NO'
          config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
          config.build_settings['GENERATE_INFOPLIST_FILE'] = 'YES'
        end

        if ['Alamofire','IQKeyboardManagerSwift','RxSwift','SDWebImage'].include?(target.name)
          config.build_settings['SKIP_INSTALL'] = 'NO'
          config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.1'
        end

        if target.name == 'NitroModules'
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.6'

          config.build_settings['HEADER_SEARCH_PATHS'] = [
            '$(inherited)',
            '$(PODS_ROOT)/Headers/Public',
            '$(PODS_ROOT)/Headers/Public/React-Core',
            '$(PODS_ROOT)/React-Core',
            '$(PODS_ROOT)/ReactCommon',
            '$(PODS_ROOT)/ReactCommon/react/nativemodule/core',
            '$(PODS_ROOT)/React-Core/ReactCommon/jsi',
            '$(PODS_ROOT)/React-Core/ReactCommon',
            '$(PODS_ROOT)/React-Core/Default',
            '$(PODS_ROOT)/RCT-Folly',
            '$(PODS_ROOT)/Headers/Public/Folly',
            '$(PODS_ROOT)/boost',
            '$(PODS_ROOT)/DoubleConversion'
          ].join(' ')
          config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'YES'

          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
          config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'    
        end
      end
    end

    #Remove PrivacyInfo File
    xcprivacy_path = File.join(__dir__, 'RnFawryPaySdkExample', 'PrivacyInfo.xcprivacy') # adjust this
    puts "Checking for: #{xcprivacy_path}"
  
    if File.exist?(xcprivacy_path)
      puts "Found Privacy file. Attempting to delete..."
      File.delete(xcprivacy_path)
      puts "Deleted."
    else
      puts "Privacy file not found."
    end

      # Remove from project file
    project_path = File.join(__dir__, 'RnFawryPaySdkExample.xcodeproj', 'project.pbxproj') # adjust this
    if File.exist?(project_path)
      content = File.read(project_path)
      if content.include?("PrivacyInfo.xcprivacy")
        puts "Removing PrivacyInfo.xcprivacy from project.pbxproj..."
        filtered = content.lines.reject { |line| line.include?("PrivacyInfo.xcprivacy") }
        File.write(project_path, filtered.join)
      end
    end
  end  
end